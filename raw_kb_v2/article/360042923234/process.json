{"file_path": "../../raw_kb_v2\\article\\360042923234\\index.html", "content": {"Title": "Data Cleaning Operations Using SQL and Magic ETL DataFlows", "Article Body": "Intro\n                       \n\n                        This topic lists a number of data clean-up operations available through SQL and Magic ETL DataFlows and shows how data will look both before and after using an operation.\n                       \n\n                        Changing Your Data Type\n                       \n\n                        Example: Changing the data type of an ID number from a numeric to a text field\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                            CAST(`id` AS CHAR) AS `id_cast_datatype`\n                           \n\n\n                           Use the \"Set Column Type\" tile\n                          \n\n                           1\n                          \n\n                           1 (looks the same but behaves a text dimension)\n                          \n\n\n\n\n                        Concatenating Columns to Create a Compound Field\n                       \n\n                        Example: Concatenating \"First Name\" and \"Last Name\" columns to create a \"Full Name\" column\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                              CONCAT(`first_name`, ' ', `last_name`) AS `full_name`\n                             \n\n\n\n\n                           Use the \"Combine Columns\" tile\n                          \n\n                           \u2018John\u2019 | \u2018Smith\u2019 \u00a0(first and last name in two separate columns)\n                          \n\n                           \u2018John Smith\u2019 (a single column containing the complete name)\n                          \n\n\n\n\n                        Extracting a Portion of a Text String\n                       \n\n                        Example: Extracting the first part of an email address to use as a user ID\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                              SUBSTRING_INDEX(`email`,'@', 1) AS `user_id`\n                             \n\n\n\n\n                           Use the \"Replace Text\" tile on that column to specify which portion of the string should be replaced with an empty string: \u00a0@.+\n                          \n\n\n                            userid@email.com\n                           \n\n\n                           userid\n                          \n\n\n\n\n                        Reformatting a Date\n                       \n\n                        Example: Formatting a non-standard date string into a date type format\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                              STR_TO_DATE(`send_date`, '%d.%m.%Y') AS date_formatted\n                             \n\n\n\n\n                           Use the \"Set Column Type\" tile.\n                          \n\n                           23.01.2017 (string data type)\n                          \n\n                           01/23/2017 (date data type)\n                          \n\n\n\n\n                        Deriving Date Attributes from a Date Column\n                       \n\n                        Example: Extracting the day of the week from a date column\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                              DAYNAME(`receive_date`) AS receive_date_name\n                             \n\n\n\n\n                           Use the \"Date Operations\" tile.\n                          \n\n                           01/23/2017\n                          \n\n                           Monday\n                          \n\n\n\n\n                        Splitting a Column into Two Columns Based on a Character in the Column\n                       \n\n                        Example: Dividing a \"Status Code\" column into status code parts based on the\n                        \n                         /\n                        \n                        delimiter found within the column\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                              SUBSTRING_INDEX(`status_code`, '/', 1) AS status_code_p1\n                              \n                              , SUBSTRING_INDEX(`status_code`, '/', -1) AS status_code_p2\n                             \n\n\n\n\n                           Use the \"Replace Text\" tile on that column to specify which portion of the string should be replaced with an empty string:\n                           \n                            \\/.+\n                           \n                           for the first part and\n                           \n                            .+\\/\n                           \n                           for the second.\n                          \n\n                           SHI/DELV\n                          \n\n                           SHI | DELV\n                          \n\n\n\n\n                        Trimming Erroneous Spaces from a Column\n                       \n\n                        Example: Trimming the leading and trailing spaces from the \"Department\" column\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                              TRIM(`department`) AS department_trimmed\n                             \n\n\n\n\n                           Use a regular expression within the \"Replace Text\" tile to pinpoint the leading and training spaces and replace them with nothing.\n                          \n\n                           ' department '\n                          \n\n                           'department'\n                          \n\n\n\n\n                        Changing the Case of an Entire Column\n                       \n\n                        Example: Changing the \"Category\" column to uppercase letters\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                              UPPER(`category`) AS category_change_case\n                             \n\n\n\n\n                           Use the\n                           \n                            All upper case\n                           \n                           option within the \"Text Formatting\" tile.\n                          \n\n                           health\n                          \n\n                           HEALTH\n                          \n\n\n\n\n                        Capitalizing the First Letter of a Column\n                       \n\n                        Example: Capitalizing the first letter of the first word in the \"Category\" column\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                              CONCAT(UPPER(LEFT(`category`, 1)), SUBSTRING(`category`, 2, LENGTH(`category`))) AS category_cap_first\n                             \n\n\n\n\n                           Use the\n                           \n                            Capitalize first letter\n                           \n                           option within the \"Text Formatting\" tile.\n                          \n\n                           health\n                          \n\n                           Health\n                          \n\n\n\n\n                        Categorizing Rows Based off the Value in a Specific Column\n                       \n\n                        Example: Assigning a region to each row based on a store number\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                              (CASE WHEN `store_number` IN ('100', '101', '104', '109') THEN 'region_1'\n                              \n                              WHEN `store_number` IN ('102', '105', '110') THEN 'region_2'\n                              \n                              WHEN `store_number` IN ('103', '106', '107', '108') THEN 'region_3'\n                              \n                              ELSE 'no region' END) AS region\n                             \n\n\n\n\n                           Use the\n                           \n                            Filter Rows\n                           \n                           tile to separate into distinct groups based on store number, use\n                           \n                            Add Constants\n                           \n                           to add a category to each group, then use\n                           \n                            Append Rows\n                           \n                           to stitch the rows back together.\n                          \n\n                           store_number = 100\n                          \n\n                           store_number = 100 | region = \u2018region_1\u2019\n                          \n\n\n\n\n                        Categorizing Rows Based off the Value in a Specific Column\n                       \n\n                        Example: Assigning a category to the animal name based on the first letter of the name\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                              (CASE WHEN `animal_names` LIKE 'H%' THEN 'Hs'\n                              \n                              WHEN `animal_names` LIKE 'B%' THEN 'Bs'\n                              \n                              WHEN (`animal_names` LIKE 'A%' OR `animal_names` LIKE 'E%') THEN 'AEs'\n                              \n                              ELSE 'another letter' END) AS animal_names_categories\n                             \n\n\n\n\n                           Use a regular expression within the \"Replace Text\" tile to identify the patterns and assign a category. \u00a0For example\n                           \n                            ^H.+\n                           \n                           finds names starting with H,\n                           \n                            ^B.+\n                           \n                           finds names starting with B,\n                           \n                            ^A.+|^E.+\n                           \n                           finds names starting with either A or E, and\n                           \n                            ^[^H,B,A,E].+\n                           \n                           finds names that do not start with H, B, A, or E.\n                          \n\n                           animal_names =\u00a0\u2018Horse\u2019\n                          \n\n                           animal_names =\u00a0\u2018Horse\u2019 | animal_names_categories = \u2018Hs\u2019\n                          \n\n\n\n\n                        Categorizing Rows Based off a Numeric Value Threshold\n                       \n\n                        Example: Categorizing rows based on salary amount\n                       \n\n\n\n\n                           In MySQL...\n                          \n\n                           In Magic ETL...\n                          \n\n                           Before\n                          \n\n                           After\n                          \n\n\n\n\n\n\n                              (CASE WHEN `salary` < 50000 THEN '<$50,000'\n                              \n                              WHEN `salary` < 100000 THEN '$50,000 - $99,999'\n                              \n                              WHEN `salary` < 150000 THEN '$100,000 - $149,999'\n                              \n                              WHEN `salary` < 200000 THEN '$150,000 - $199,999'\n                              \n                              ELSE '>$200,000' END) AS salary_bucket\n                             \n\n\n\n\n                           Use the \"Filter Rows\" tile to separate into distinct groups based on store number, use \"Add Constants\" to add a category to each group, then use \"Append Rows\" to stitch the rows back together.\n                          \n\n                           salary = $45,000\n                          \n\n                           salary = $45,000 | salary_bucket = \u2018<$50,000\u2019", "Preview Article": "Click here to preview", "URL Name": "360042923234", "Summary\n                     \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                       Briefly describe the article. The summary is used in search results to help users find relevant articles. You can improve the accuracy of search results by including phrases that your customers use to describe this issue or topic.": "", "Article Number": "000004611", "Archived Date": "", "Language": "English", "Primary Version": "Data Cleaning Operations Using SQL and Magic ETL DataFlows", "Article Total View Count": "5,150", "": "", "Article Created Date": "10/24/2022, 10:16 PM", "First Published Date": "10/24/2022, 10:41 PM"}, "title": "\n              Data Cleaning Operations Using SQL and Magic ETL DataFlows\n             ", "breadcrumbs": [{"text": "\n\n               Domo\n              \n", "url": "/s/knowledge-base/"}, {"text": "\n\n               Transforming Data In Domo\n              \n", "url": "/s/topic/0TO5w000000ZamzGAC"}, {"text": "\n\n               Transformation Tips And Tricks\n              \n", "url": "/s/topic/0TO5w000000ZaoJGAS"}]}