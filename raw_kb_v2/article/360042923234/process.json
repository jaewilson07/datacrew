{"file_path": "../../raw_kb_v2\\article\\360042923234\\index.html", "content": {"title": "\n\n\n Data Cleaning Operations Using SQL and Magic ETL DataFlows\n\n\n", "article_body": "\n\nIntro\n-------\n\nThis topic lists a number of data clean-up operations available through SQL and Magic ETL DataFlows and shows how data will look both before and after using an operation.\n\n\n Changing Your Data Type\n-------------------------\n\nExample: Changing the data type of an ID number from a numeric to a text field\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `CAST(`id` AS CHAR) AS `id_cast_datatype``  |\n Use the \"Set Column Type\" tile\n  |\n 1\n  |\n 1 (looks the same but behaves a text dimension)\n  |\n\nConcatenating Columns to Create a Compound Field\n--------------------------------------------------\n\nExample: Concatenating \"First Name\" and \"Last Name\" columns to create a \"Full Name\" column\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `CONCAT(`first\\_name`, ' ', `last\\_name`) AS `full\\_name`` |\n Use the \"Combine Columns\" tile\n  |\n \u2018John\u2019 | \u2018Smith\u2019 \u00a0(first and last name in two separate columns)\n  |\n \u2018John Smith\u2019 (a single column containing the complete name)\n  |\n\nExtracting a Portion of a Text String\n---------------------------------------\n\nExample: Extracting the first part of an email address to use as a user ID\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `SUBSTRING\\_INDEX(`email`,'@', 1) AS `user\\_id`` |\n Use the \"Replace Text\" tile on that column to specify which portion of the string should be replaced with an empty string: \u00a0@.+\n  |\n userid@email.com\n  |\n userid\n  |\n\nReformatting a Date\n---------------------\n\nExample: Formatting a non-standard date string into a date type format\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `STR\\_TO\\_DATE(`send\\_date`, '%d.%m.%Y') AS date\\_formatted` |\n Use the \"Set Column Type\" tile.\n  |\n 23.01.2017 (string data type)\n  |\n 01/23/2017 (date data type)\n  |\n\nDeriving Date Attributes from a Date Column\n---------------------------------------------\n\nExample: Extracting the day of the week from a date column\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `DAYNAME(`receive\\_date`) AS receive\\_date\\_name` |\n Use the \"Date Operations\" tile.\n  |\n 01/23/2017\n  |\n Monday\n  |\n\nSplitting a Column into Two Columns Based on a Character in the Column\n------------------------------------------------------------------------\n\nExample: Dividing a \"Status Code\" column into status code parts based on the\n\n/\n\ndelimiter found within the column\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `SUBSTRING\\_INDEX(`status\\_code`, '/', 1) AS status\\_code\\_p1\n\n, SUBSTRING\\_INDEX(`status\\_code`, '/', -1) AS status\\_code\\_p2` |\n Use the \"Replace Text\" tile on that column to specify which portion of the string should be replaced with an empty string:\n\n\\/.+\n\nfor the first part and\n\n.+\\/\n\nfor the second.\n  |\n SHI/DELV\n  |\n SHI | DELV\n  |\n\nTrimming Erroneous Spaces from a Column\n-----------------------------------------\n\nExample: Trimming the leading and trailing spaces from the \"Department\" column\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `TRIM(`department`) AS department\\_trimmed` |\n Use a regular expression within the \"Replace Text\" tile to pinpoint the leading and training spaces and replace them with nothing.\n  |\n ' department '\n  |\n 'department'\n  |\n\nChanging the Case of an Entire Column\n---------------------------------------\n\nExample: Changing the \"Category\" column to uppercase letters\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `UPPER(`category`) AS category\\_change\\_case` |\n Use the\n **All upper case**\n option within the \"Text Formatting\" tile.\n  |\n health\n  |\n HEALTH\n  |\n\nCapitalizing the First Letter of a Column\n-------------------------------------------\n\nExample: Capitalizing the first letter of the first word in the \"Category\" column\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `CONCAT(UPPER(LEFT(`category`, 1)), SUBSTRING(`category`, 2, LENGTH(`category`))) AS category\\_cap\\_first` |\n Use the\n **Capitalize first letter**\n option within the \"Text Formatting\" tile.\n  |\n health\n  |\n Health\n  |\n\nCategorizing Rows Based off the Value in a Specific Column\n------------------------------------------------------------\n\nExample: Assigning a region to each row based on a store number\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `(CASE WHEN `store\\_number` IN ('100', '101', '104', '109') THEN 'region\\_1'\n\nWHEN `store\\_number` IN ('102', '105', '110') THEN 'region\\_2'\n\nWHEN `store\\_number` IN ('103', '106', '107', '108') THEN 'region\\_3'\n\nELSE 'no region' END) AS region` |\n Use the\n **Filter Rows**\n tile to separate into distinct groups based on store number, use\n **Add Constants**\n to add a category to each group, then use\n **Append Rows**\n to stitch the rows back together.\n  |\n store\\_number = 100\n  |\n store\\_number = 100 | region = \u2018region\\_1\u2019\n  |\n\nCategorizing Rows Based off the Value in a Specific Column\n------------------------------------------------------------\n\nExample: Assigning a category to the animal name based on the first letter of the name\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `(CASE WHEN `animal\\_names` LIKE 'H%' THEN 'Hs'\n\nWHEN `animal\\_names` LIKE 'B%' THEN 'Bs'\n\nWHEN (`animal\\_names` LIKE 'A%' OR `animal\\_names` LIKE 'E%') THEN 'AEs'\n\nELSE 'another letter' END) AS animal\\_names\\_categories` |\n Use a regular expression within the \"Replace Text\" tile to identify the patterns and assign a category. \u00a0For example\n\n^H.+\n\nfinds names starting with H,\n\n^B.+\n\nfinds names starting with B,\n\n^A.+|^E.+\n\nfinds names starting with either A or E, and\n\n^[^H,B,A,E].+\n\nfinds names that do not start with H, B, A, or E.\n  |\n animal\\_names =\u00a0\u2018Horse\u2019\n  |\n animal\\_names =\u00a0\u2018Horse\u2019 | animal\\_names\\_categories = \u2018Hs\u2019\n  |\n\nCategorizing Rows Based off a Numeric Value Threshold\n-------------------------------------------------------\n\nExample: Categorizing rows based on salary amount\n\n\n In MySQL...\n  |\n In Magic ETL...\n  |\n Before\n  |\n After\n  |\n| --- | --- | --- | --- |\n| `(CASE WHEN `salary` < 50000 THEN '<$50,000'\n\nWHEN `salary` < 100000 THEN '$50,000 - $99,999'\n\nWHEN `salary` < 150000 THEN '$100,000 - $149,999'\n\nWHEN `salary` < 200000 THEN '$150,000 - $199,999'\n\nELSE '>$200,000' END) AS salary\\_bucket` |\n Use the \"Filter Rows\" tile to separate into distinct groups based on store number, use \"Add Constants\" to add a category to each group, then use \"Append Rows\" to stitch the rows back together.\n  |\n salary = $45,000\n  |\n salary = $45,000 | salary\\_bucket = \u2018<$50,000\u2019\n  |\n\n\n", "preview_article": "\n\nClick here to preview\n\n", "url_name": "\n\n\n 360042923234\n\n\n", "summary____________________________________________briefly_describe_the_article_the_summary_is_used_in_search_results_to_help_users_find_relevant_articles_you_can_improve_the_accuracy_of_search_results_by_including_phrases_that_your_customers_use_to_describe_this_issue_or_topic": "\n\n", "article_number": "\n\n\n 000004611\n\n\n", "archived_date": "\n\n\n", "language": "\n\n\n English\n\n\n", "primary_version": "\n\nData Cleaning Operations Using SQL and Magic ETL DataFlows\n\n", "article_total_view_count": "\n\n\n 5,150\n\n\n", "": "\n\n", "article_created_date": "\n\n\n 10/24/2022, 10:16 PM\n\n\n", "first_published_date": "\n\n\n 10/24/2022, 10:41 PM\n\n\n"}, "title": "data_cleaning_operations_using_sql_and_magic_etl_dataflows", "breadcrumbs": [{"text": "domo", "url": "/s/knowledge-base/"}, {"text": "transforming_data_in_domo", "url": "/s/topic/0TO5w000000ZamzGAC"}, {"text": "transformation_tips_and_tricks", "url": "/s/topic/0TO5w000000ZaoJGAS"}]}