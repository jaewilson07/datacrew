{"file_path": "../../raw_kb_v2\\article\\360042923094\\index.html", "content": {"Title": "Creating a Rolling Average Period-over-Period DataFlow", "Article Body": "At times you may want to create a card with, for example, a three-month moving average for this year compared to the same period last year, to see if they are trending up or down in comparison to the previous year.\n                       \n\n                        To create the DataFlow for this calculation, create a transform like:\n                       \n\n\n                         SELECT\n                         \n                         `DateField`\n                         \n                         ,`ValueField`\n                         \n                         ,(SELECT\n                         \n                         SUM(`ValueField`) / COUNT(*)\n                         \n                         FROM\n                         \n                         TABLE\u00a0t2\n                         \n                         WHERE\n                         \n                         t2.`DateField` > LAST_DAY(DATE_SUB(t1.`DateField`, INTERVAL 3 MONTH))\n                         \n                         AND t2.`DateField` < LAST_DAY(t1.`DateField`) ) AS `Rolling_Average`\n                        \n\n\n\n                         FROM\n                         \n                         TABLE\u00a0t1\n                        \n\n\n                        This transform assumes that the \"DateField\" column contains a date representing the month, e.g.\n                        \n                         2015-01-01\n                        \n                        for January.\n                       \n\n                        The subquery retrieves the sum of the last 3 months\u2019 worth of values and then divides them by the number of records found in the range, creating the \"Rolling_Average\" field.\n                       \n\n                        You need to replace your field names for \u201cDateField\" and \u201cValueField\u201d and add any others you want in the resulting DataSet. Also replace\n                        \n                         TABLE\n                        \n                        with the DataSet table you\u2019re using as your input.\n                       \n\n                        It is often beneficial to create a snapshot of values, so that as of any date chosen, you can look at that day\u2019s values compared against other time periods (the day before, week before, month before, etc.). To do this in a DataFlow, the data must be placed side-by-side so the card can read it properly. The following example query does this. Each section should be its own transform. You should also add indexing to the query for MySQL DataFlows.\n                       \n\n\n                         Select\n                         \n                         today.date,\n                         \n                         today.value,\n                         \n                         yesterday.value,\n                         \n                         lastweek.value,\n                         \n                         lastmonth.value\n                         \n                         from\n                         \n                         rawdata today\n                         \n                         left join\n                         \n                         (select date_add(datevalue, INTERVAL 1 DAY) as date, value from rawdata) yesterday\n                         \n                         on today.date = yesterday.date\n                         \n                         left join\n                         \n                         (select date_add(datevalue, INTERVAL 7 DAY) as date, value from rawdata) lastweek\n                         \n                         on today.date = lastweek.date\n                         \n                         left join\n                         \n                         (select date_add(datevalue, INTERVAL 1 MONTH) as date, value from rawdata) lastmonth\n                         \n                         on today.date = lastmonth.date\n                        \n\n\n                        The following table shows the logic behind this query:\n                       \n\n\n\n\n                        Some additional work may be needed in order to pull in the correct columns and values (such as using a Group By action).", "Preview Article": "Click here to preview", "URL Name": "360042923094", "Summary\n                     \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                       Briefly describe the article. The summary is used in search results to help users find relevant articles. You can improve the accuracy of search results by including phrases that your customers use to describe this issue or topic.": "", "Article Number": "000004619", "Archived Date": "", "Language": "English", "Primary Version": "Creating a Rolling Average Period-over-Period DataFlow", "Article Total View Count": "4,941", "": "", "Article Created Date": "10/24/2022, 10:17 PM", "First Published Date": "10/24/2022, 10:39 PM"}, "title": "\n              Creating a Rolling Average Period-over-Period DataFlow\n             ", "breadcrumbs": [{"text": "\n\n               Domo\n              \n", "url": "/s/knowledge-base/"}, {"text": "\n\n               Transforming Data In Domo\n              \n", "url": "/s/topic/0TO5w000000ZamzGAC"}, {"text": "\n\n               Transformation Tips And Tricks\n              \n", "url": "/s/topic/0TO5w000000ZaoJGAS"}]}