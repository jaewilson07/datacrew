{"file_path": "../../raw_kb_v2\\article\\360042923514\\index.html", "content": {"title": "\n\n\n Removing Invalid ASCII Characters from Your Data\n\n\n", "article_body": "\n\nIssue\n-------\n\nFor various reasons, your data may contain invalid ASCII characters in it. These characters may cause inaccurate data and/or cause errors when the data is put on the Domo platform.\n\n\n How to Fix\n------------\n\nRun your data through a stored procedure in a MySQL dataflow that should remove invalid ASCII\u00a0characters.\n\n\n**To set up a MySQL DataFlow that removes ASCII characters,**\n\n\n 1. Create a new MySQL DataFlow.\n\n\n 2. Add your DataSet that contains these un-common characters.\n\n\n 3. Create a new transform.\n\n\n 4. Copy and paste the following code snippet into the new transform:\n\n\n```\nCREATE PROCEDURE remove_uncommon_ascii(IN `input` char(255), IN `column` char(255))\nBEGIN\nSET @in = `input`;\nSET @col = `column`;\n\nET @counter = 1;\nWHILE ((@counter <= 31 OR @counter >= 127) AND @counter <= 300) DO\n    SET @var = (SELECT CONCAT(\"update \",@in,\" set \",@col,\" = replace(\",@col,\", CHAR(\",@counter,\"), '');\") query);\n    PREPARE STMT FROM @var;\n    EXECUTE STMT;\n\n   IF(@counter = 31) THEN\n        SET @counter = 127;\n    ELSE\n        SET @counter = @counter +1;\n    END IF;\n\nND WHILE;\n\n\nSET @var2 = (SELECT CONCAT(\"update \",@in,\" set \",@col,\" = TRIM(\",@col,\");\") query);\n    PREPARE STMT FROM @var2;\n    EXECUTE STMT;\n\nND;\n\n``\n\n*Important:**\n Do not change this transform!\n\n5.\u00a0Deselect \u201cGenerate Output Table\u201d in the transform.\n\n\n 6. Click \u201cRun SQL.\u201d\n\n\n 7.\u00a0Click \u201cApply\u201d after it is done running.\n\n\n 8. Create a new transform.\n\n\n 9. Copy and paste the following code snippet call/transform\\_2 into the new transform.\n\n\n```\nCALL remove_uncommon_ascii('ascii_test', '`text`');\n\n``\n\n\n 10. Deselect \u201cGenerate Output Table\u201d in the transform.\n\n\n 11. Edit the statement to include the name of your table and the name of the column that may include the invalid characters. For example, if your table is named \u201cproducts\u201d and the column that may include invalid characters is called \u201cproduct\\_name,\u201d\u00a0you would add the following code:\n\n\n```\nCALL remove_uncommon_ascii('products', '`product_name`');\n\n``\n\n\n The table you used in step 11 should now have the invalid ASCII characters removed from the column you specified in the same step.\n\n*Tip:**\n If you need to do this with multiple columns you will need to create multiple Call transforms (steps 8 \u2013 13), one for each column.\n\n\n", "preview_article": "\n\nClick here to preview\n\n", "url_name": "\n\n\n 360042923514\n\n\n", "summary____________________________________________briefly_describe_the_article_the_summary_is_used_in_search_results_to_help_users_find_relevant_articles_you_can_improve_the_accuracy_of_search_results_by_including_phrases_that_your_customers_use_to_describe_this_issue_or_topic": "\n\n", "article_number": "\n\n\n 000004601\n\n\n", "archived_date": "\n\n\n", "language": "\n\n\n English\n\n\n", "primary_version": "\n\nRemoving Invalid ASCII Characters from Your Data\n\n", "article_total_view_count": "\n\n\n 4,727\n\n\n", "": "\n\n", "article_created_date": "\n\n\n 10/24/2022, 10:15 PM\n\n\n", "first_published_date": "\n\n\n 10/24/2022, 10:41 PM\n\n\n"}, "title": "removing_invalid_ascii_characters_from_your_data", "breadcrumbs": [{"text": "domo", "url": "/s/knowledge-base/"}, {"text": "transforming_data_in_domo", "url": "/s/topic/0TO5w000000ZamzGAC"}, {"text": "transformation_tips_and_tricks", "url": "/s/topic/0TO5w000000ZaoJGAS"}]}