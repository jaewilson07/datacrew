{"file_path": "../../raw_kb_v2\\article\\1500000888261\\index.html", "content": {"title": "\n\n\n Snowflake KeyPair Partition Connector\n\n\n", "article_body": "\n\nIntro\n-------\n\n\n The Domo Snowflake KeyPair Partition makes it easy to bring all your data from your Snowflake data warehouse into Domo based on the number of past days provided. If you are already using Snowflake as a data warehousing solution, this connector helps you use Domo in conjunction with it to get the most from your data. To use this connector, you must have your Snowflake account name (domain) and the username and private key for your Snowflake account. Use Domo's Snowflake KeyPair Partition connector to maximize your cloud data strategy by connecting your data to Domo and making it instantly accessible to everyone in your company.\n\n\n Once your Snowflake data is in Domo, you can combine it with all your other Domo data to get a centralized view of your most mission-critical data.\n\nPrerequisites\n---------------\n\nTo connect to a Snowflake database and create a DataSet, you must have the following:\n\n The full name of your account (provided by Snowflake). This is the portion of your Snowflake URL immediately following https://.\n\n\n Note that your full account name may include additional segments that identify the region and cloud platform where your account is hosted.\u00a0For US West Region\n ****account\\_name****\n and All other regions\n ****account\\_name.region\\_id****\n . The following table provides account name examples by cloud platform/region. For each row, it assumes your account name is \"xy12345.\"\n\n The username used to connect to your Snowflake host.\n* The private key.\n* The passphrase. If you create an encrypted private key, then OpenSSL prompts for a passphrase used to encrypt the private key file.\n* Your role name.\n\n\n###\n Configuring the public/private key pair\n\nTo configure the public/private key pair, follow these steps:\n\n. From the command line in a terminal window, generate a private key.\n\n\n You can generate either an encrypted version of the private key or an unencrypted version of the private key.\n\n\n\t* To generate an unencrypted version, use the following command:\n\n\n\t`$ openssl genrsa -out rsa_key.pem 2048`\n\t* To generate an encrypted version, use the following command:\n\n\n\t`$ openssl genrsa 2048 | openssl pkcs8 -topk8 -inform PEM -out rsa_key.p8`\n\n\n\t It is typically safer to generate an encrypted version.\n\n\n\t If you use the second command to encrypt the private key, then OpenSSL prompts for a passphrase used to encrypt the private key file. We recommend using a strong passphrase to protect the private key. Record this passphrase in a secure location. You will input it when connecting to Snowflake. Note that the passphrase is only used for protecting the private key and will never be sent to Snowflake.\n\n\n\t The following is a sample PEM private key:\n\n\n\t`-----BEGIN ENCRYPTED PRIVATE KEY-----\n\n\n\t MIIE6TAbBgkqhkiG9w0BBQMwDgQILYPyCppzOwECAggABIIEyLiGSpeeGSe3xHP1\n\n\n\t wHLjfCYycUPennlX2bd8yX8xOxGSGfvB+99+PmSlex0FmY9ov1J8H1H9Y3lMWXbL\n\n\n\t ...\n\n\n\t -----END ENCRYPTED PRIVATE KEY-----`\n2. From the command line, generate the public key by referencing the private key.\u00a0Assuming the private key is encrypted and contained in the file named \u201crsa\\_key.p8\u201d, use the following command:\n\n\n`$ openssl rsa -in rsa_key.p8 -pubout -out rsa_key.pub`\n\n\n The following is a sample PEM\u00a0public key:\n\n\n`-----BEGIN PUBLIC KEY-----\n\n\n MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAy+Fw2qv4Roud3l6tjPH4\n\n\n zxybHjmZ5rhtCz9jppCV8UTWvEXxa88IGRIHbJ/PwKW/mR8LXdfI7l/9vCMXX4mk\n\n\n ...\n\n\n -----END PUBLIC KEY-----`\n3. Copy the public and private key files to a local directory for storage. Record the path to the files. Note that the private key is stored using the PKCS#8 (Public Key Cryptography Standards) format and is encrypted using the passphrase you specified in the previous step; however, the file should still be protected from unauthorized access using the file permission mechanism provided by your operating system. It is your responsibility to secure the file when it is not being used.\n4. Assign\u00a0the public key to the Snowflake user using\u00a0ALTER USER. For example:\n\n\n`alter user jsmith set rsa_public_key='MIIBIjANBgkqh...';`\n\n\n**Notes:**\n\n\n\t* Only security administrators (i.e. users with the SECURITYADMIN role) or higher can alter a user.\n\t* Exclude the public key header and footer in the SQL statement.\n5. Verify the user\u2019s public key fingerprint using\u00a0DESCRIBE USER:\n\n\n Property\n  |\n Value\n  |\n Default\n  |\n Description\n  |\n| --- | --- | --- | --- |\n|\n Name\n  |\n JSMITH\n  |\n null\n  |\n Name\n  |\n|\n RSA\\_PUBLIC\\_KEY\\_FP\n  |\n SHA256:nvnONUsfiuycCLMXIEWG4eTp4FjhVUZQUQbNpbSHXiA=\n  |\n null\n  |\n Fingerprint of user's RSA public key.\n  |\n|\n RSA\\_PUBLIC\\_KEY\\_2\\_FP\n  |\n null\n  |\n null\n  |\n Fingerprint of user's second RSA public key.\n  |\n\n\n**Note:**\n\nFor more information about the RSA\\_PUBLIC\\_KEY\\_2\\_FP property, see Key Rotation.\n6. Modify and execute the sample code, below. The code decrypts the private key file and passes it to the Snowflake driver to create a connection:\n\t* Update the security parameters:\n\t\t+ <path> specifies the local path to the private key file you created.\n\t* Update the session parameters:\n\t\t+ <user> specifies your Snowflake login name.\n\t\t+ <account> specifies the name of your account (provided by Snowflake).\n\t* The sample code is as follows:\n\n`import java.util.Properties;\n\n\n\t import java.sql.Connection;\n\n\n\t import java.sql.Statement;\n\n\n\t import java.sql.ResultSet;\n\n\n\t import java.sql.DriverManager;\n\n\n\t import java.io.File;\n\n\n\t import java.io.FileInputStream;\n\n\n\t import java.io.DataInputStream;\n\n\n\t import java.util.Base64;\n\n\n\t import java.security.spec.PKCS8EncodedKeySpec;\n\n\n\t import java.security.KeyFactory;\n\n\n\t import java.security.PrivateKey;\n\n\n\t import javax.crypto.EncryptedPrivateKeyInfo;\n\n\n\t import javax.crypto.SecretKeyFactory;\n\n\n\t import javax.crypto.spec.PBEKeySpec;`\n\n\n\t`public class TestJdbc\n\n\n\t {\n\n\n\t public static void main(String[] args)\n\n\n\t throws Exception\n\n\n\t {\n\n\n\t File f = new File(\"<path>/rsa_key.p8\");\n\n\n\t FileInputStream fis = new FileInputStream(f);\n\n\n\t DataInputStream dis = new DataInputStream(fis);\n\n\n\t byte[] keyBytes = new byte[(int) f.length()];\n\n\n\t dis.readFully(keyBytes);\n\n\n\t dis.close();`\n\n\n\t`String encrypted = new String(keyBytes);\n\n\n\t String passphrase = System.getenv(\"PRIVATE_KEY_PASSPHRASE\");\n\n\n\t encrypted = encrypted.replace(\"-----BEGIN ENCRYPTED PRIVATE KEY-----\", \"\");\n\n\n\t encrypted = encrypted.replace(\"-----END ENCRYPTED PRIVATE KEY-----\", \"\");\n\n\n\t EncryptedPrivateKeyInfo pkInfo = new EncryptedPrivateKeyInfo(Base64.getMimeDecoder().decode(encrypted));\n\n\n\t PBEKeySpec keySpec = new PBEKeySpec(passphrase.toCharArray());\n\n\n\t SecretKeyFactory pbeKeyFactory = SecretKeyFactory.getInstance(pkInfo.getAlgName());\n\n\n\t PKCS8EncodedKeySpec encodedKeySpec = pkInfo.getKeySpec(pbeKeyFactory.generateSecret(keySpec));\n\n\n\t KeyFactory keyFactory = KeyFactory.getInstance(\"RSA\");\n\n\n\t PrivateKey encryptedPrivateKey = keyFactory.generatePrivate(encodedKeySpec);`\n\n\n\t`String url = \"jdbc:snowflake://<account>.\n\n snowflakecomputing.com\n\n \";\n\n\n\t Properties prop = new Properties();\n\n\n\t prop.put(\"user\", \"<user>\");\n\n\n\t prop.put(\"account\", \"<account>\");\n\n\n\t prop.put(\"privateKey\", encryptedPrivateKey);`\n\n\n\t`Connection conn = DriverManager.getConnection(url, prop);\n\n\n\t Statement stat = conn.createStatement();\n\n\n\t ResultSet res = stat.executeQuery(\"select 1\");\n\n\n\t res.next();\n\n\n\t System.out.println(res.getString(1));\n\n\n\t conn.close();\n\n\n\t }\n\n\n\t }`\n\n\n####\n Key Rotation\n\nSnowflake supports multiple active keys to allow for uninterrupted rotation. Rotate and replace your public and private keys based on the expiration schedule you follow internally.\n\n\n Currently, you can use the RSA\\_PUBLIC\\_KEY and RSA\\_PUBLIC\\_KEY\\_2 parameters for ALTER USER to associate up to 2 public keys with a single user.\n\n\n To rotate your keys,\n\n. Complete the steps in Using Key Pair Authentication to...\n\n\n\t* Generate a new private and public key set.\n\t* Assign the public key to the user. Set the public key value to either RSA\\_PUBLIC\\_KEY or RSA\\_PUBLIC\\_KEY\\_2 (whichever key value is not currently in use).\n\n\n\t For example:\n\n\n\t`alter user jsmith set rsa_public_key_2='JERUEHtcve...';`\n2. Update the code to connect to Snowflake. Specify the new private key.\n\n\n Snowflake verifies the correct active public key for authentication based on the private key submitted with your connection information.\n3. Remove the old public key from the user profile. For example:\n\n\n`alter user jsmith unset rsa_public_key;`\n\nConnecting to Your Snowflake Account\n--------------------------------------\n\n\n This section enumerates the options in the\n **Credentials**\n and\n **Details**\n panes in the\n\nSnowflake KeyPair Partition\n\nConnector page.\u00a0The components of the other panes in this page,\n **Scheduling**\n and\n **Name & Describe Your DataSet**\n , are universal across most connector types and are discussed in greater length in\n\nAdding a DataSet Using a Data Connector\n\n.\n\n\n###\n\nCredentials Pane\n\nThis pane contains fields for entering credentials to your Snowflake account. The following table describes what is needed for each field:\n\nField\n\n|\n\nDescription\n\n|\n| --- | --- |\n|\n Account Name\n  |\n Enter the full name of your account (provided by Snowflake.)\u00a0For US West Region\n ****account\\_name****\n and All other regions\n ****account\\_name.region\\_id**** |\n|\n Username\n  |\n Enter the\u00a0username used to connect to your Snowflake host.\n  |\n|\n Private Key\n  |\n Enter the private key.\n  |\n|\n Passphrase\n  |\n If you create an encrypted private key, then OpenSSL prompts for a passphrase used to encrypt the private key file. Enter that passphrase here.\n  |\n|\n Role\n  |\n Enter the name for your role.\n  |\n\n\n Once you have entered valid credentials, you can use the same account any time you to create a new Snowflake KayPair Partition dataset. You can manage connector accounts in the\n **Accounts**\n tab in the Data Center. For more information about this tab, see\n\nManaging User Accounts for Connectors\n\n.\n\n\n###\n Details Pane\n\nThis pane contains a primary\n **Reports**\n menu, along with various other menus which may or may not appear depending on the report type you select.\n\n\n Menu\n  |\n Description\n  |\n| --- | --- |\n|\n Query\n  |\n\nEnter the query to execute. The query format must be like: select \\* from\n\n\n databaseName\n\n\n .\n\n\n schemaName\n\n\n .\n\n\n tableName\n\n|\n|\n Warehouses\n  |\n Select the warehouse containing the data you want to retrieve. The list populates with all warehouses you have access to based on your credentials.\n  |\n|\n Databases\n  |\n Select the database containing the data you want to retrieve.\u00a0 The list populates with all databases you have access to based on your credentials.\n  |\n|\n Schema\n  |\n Select the database schema containing the data you want to retrieve. The list populates with all schemas you have access to based on your credentials.\n  |\n|\n Database Objects\n  |\n\nSelect a database object.\n\n|\n|\n Tables\n  |\n Select the database table you want to retrieve.\n  |\n|\n\nTable Partition Column Name\n\n|\n\nSelect the partition column name.\n\n|\n|\n\nViews\n\n|\n\nSelect the view.\n\n|\n|\n\nView Partition Column Name\n\n|\n\nSelect the partition column name.\n\n|\n|\n Past Days\n  |\n Enter the number of past days that you want to get data for. Value can be X, where X is a positive integer. Example: 30.\n  |\n|\n Date Format\n  |\n Select the required date format. By default\n ****yyyy-MM-dd****\n will be used.\n  |\n|\n Custom Date Format\n  |\n Enter the custom date format.\n  |\n\n\n###\n Other Panes\n\nFor information about the remaining sections of the Connector interface, including how to configure scheduling, retry, and update options, see\n\nAdding a DataSet Using a Data Connector\n\n.\n\n\n FAQs\n------\n\n\n####\n Are there any API limits I should be aware of?\n\n\n The limits depend on your server configuration.\n\n\n####\n How frequently will my data update?\n\nDataSets can run as often as every 15 minutes. However, depending on the runtime of the query, DataSets may need to run less frequently.\n\n###\n What should I be aware of while writing a query?\n\nMake sure that all the words, table names, and field names are correctly spelled.\n\n###\n Why can't I connect to my Snowflake database? Do I need to whitelist any IP addresses?\n\nBefore you can connect to a Snowflake database, you must also whitelist a number of IP addresses on your database server on the port you want to connect to. For the full list of IP addresses, see\n\nWhitelisting IP Addresses in Domo\n\n.\n\n\n Troubleshooting\n-----------------\n\n\n* Make sure your authentication remains valid.\n* Review the configuration to make sure that all required items have been selected.\n* Review the Connector history for error messages.\n* In rare cases, you may be requesting too much information and reaching API limitations or timeouts. If this is the case, you can review the history of the Connector run to see the error message and duration. If this is the case, you can reduce the number of accounts that are being pulled, choose a smaller number of metrics for the report that you are pulling, or reduce the timeframe that you are trying to pull.\n\n\n", "preview_article": "\n\nClick here to preview\n\n", "url_name": "\n\n\n 1500000888261\n\n\n", "summary____________________________________________briefly_describe_the_article_the_summary_is_used_in_search_results_to_help_users_find_relevant_articles_you_can_improve_the_accuracy_of_search_results_by_including_phrases_that_your_customers_use_to_describe_this_issue_or_topic": "\n\n", "article_number": "\n\n\n 000003858\n\n\n", "archived_date": "\n\n\n", "language": "\n\n\n English\n\n\n", "primary_version": "\n\nSnowflake KeyPair Partition Connector\n\n", "article_total_view_count": "\n\n\n 4,669\n\n\n", "": "\n\n", "article_created_date": "\n\n\n 10/24/2022, 9:16 PM\n\n\n", "first_published_date": "\n\n\n 10/24/2022, 10:41 PM\n\n\n"}, "title": "snowflake_keypair_partition_connector", "breadcrumbs": [{"text": "domo", "url": "/s/knowledge-base/"}, {"text": "connecting_data_to_domo", "url": "/s/topic/0TO5w000000ZammGAC"}, {"text": "connectors", "url": "/s/topic/0TO5w000000ZanLGAS"}, {"text": "database_connectors", "url": "/s/topic/0TO5w000000ZaojGAC"}]}