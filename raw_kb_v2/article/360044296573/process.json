{"file_path": "../../raw_kb_v2\\article\\360044296573\\index.html", "content": {"title": "\n\n\n Writing a Filter Formula in Magic ETL\n\n\n", "article_body": "\n\nIntro\n-------\n\nFilter Formulas enable Magic ETL DataFlow authors to easily filter out data using SQL-style syntax. The filter formula needs to be a logical (Boolean) expression. In other words, the result of your formula must be a True/False return. Now you can save time by using expressions like\n *'Column name' >= 7*\n or\n *`Column name` BETWEEN 15 AND 20*\n rather than navigate the traditional Filter Configuration tab.\n\n\n**Important:**\n There are significant behavioral differences in Magic ETL. Read the\n\n\n Behavior Changes and Feature Updates in Magic ETL\n\n\n article before converting mission-critical Magic ETL DataFlows.\n **Failure to do so may risk an unintended change to your DataFlow\u2019s behavior.**\n\n\n Common Logical Filters\n------------------------\n\nA few examples of common logical filters are as follows:\n\n *`id` >= 7*\n* *`Percent Change` BETWEEN .35 AND .65*\n* *`Phone Number` LIKE \u2018801%\u2019 AND `Age` < 35 AND `State` = \u2018California\u2019*\n* *(`Age` > 20 AND (`Salary` / 12) > 40000) or `Age` > 50*\n* *REGEXP\\_LIKE(`Email`, \u2018@\n\ngmail.com\n\n\u2019)*\n* *`Product Type` IN (1, 3, 7, 9)*\n\nFilter Rows\n-------------\n\nNull values are treated differently by the comparison functions. In SQL and Magic ETL\u00a0DataFlows, the result of any comparison with null is always null, which is treated by the\n **Filter Rows**\n tile like a false result. In most contexts in Magic ETL, null is not equal to null, but null is also not not equal to null; null is not greater than zero, but it is also not less than zero, nor is it equal to zero. If you have nulls in columns referenced by\n **Filter Rows**\n tiles, all of those rows will be dropped, regardless of the function or its other argument. The only functions that can deal with nulls truthfully are \u201cis null\u201d and \u201cis not null\u201d. In v1, a filter might have tested \u201ccolumn = null\u201d. This will no longer have the same result; such filters should be changed to use the \u201cis null\u201d operator.\n\n\n If after switching a flow from Magic ETL v1 to Magic ETL v2, it runs successfully, but the output seems to be missing rows, this change is a likely culprit. It can be especially surprising with the \u201cis not equal to\u201d function. It might seem like \u201ccolumn <> 5\u201d should only drop rows where column\u2019s value is 5, but in fact it will also drop rows where column is null, for the reason described above. The table below has additional examples of null behavior in\n **Filter Rows**\n .\n\n\n Test\n  |\n Evaluated Result\n  |\n Filter Effect\n  |\n| --- | --- | --- |\n|\n 4 <> 5\n  |\n true\n  |\n keep\n  |\n|\n 5 <> 5\n  |\n false\n  |\n drop\n  |\n|\n null <> 5\n  |\n null\n  |\n drop\n  |\n|\n null = null\n  |\n null\n  |\n drop\n  |\n|\n null <> null\n  |\n null\n  |\n drop\n  |\n|\n null is null\n  |\n true\n  |\n keep\n  |\n|\n null is not null\n  |\n false\n  |\n drop\n  |\n|\n 5 is not null\n  |\n true\n  |\n keep\n  |\n|\n 5 is null\n  |\n false\n  |\n drop\n  |\n\nTo handle nulls in more complex ways, use the new formula system. The\n **Filter Rows**\n tile is one of three tiles (\n **Group By**\n and\n **Add Formula**\n being the other two) which supports formula evaluation. The IFNULL() function works particularly well for handling a null result from a filter expression. For example, if column \u201ccol\u201d has null values, and we want to filter for rows whose value for \u201ccol\u201d is not 5, preserving our nulls, we could write this expression: IFNULL(col <> 5, TRUE)\n\n\n Besides null handling, there are many other scenarios that filter formulas make easier. In the previous version of Magic ETL, the single formula below would have required two separate\n **Filter Rows**\n tiles with multiple conditions each.\n\n\n", "preview_article": "\n\nClick here to preview\n\n", "url_name": "\n\n\n 360044296573\n\n\n", "summary____________________________________________briefly_describe_the_article_the_summary_is_used_in_search_results_to_help_users_find_relevant_articles_you_can_improve_the_accuracy_of_search_results_by_including_phrases_that_your_customers_use_to_describe_this_issue_or_topic": "\n\n", "article_number": "\n\n\n 000004579\n\n\n", "archived_date": "\n\n\n", "language": "\n\n\n English\n\n\n", "primary_version": "\n\nWriting a Filter Formula in Magic ETL\n\n", "article_total_view_count": "\n\n\n 9,066\n\n\n", "": "\n\n", "article_created_date": "\n\n\n 10/24/2022, 10:15 PM\n\n\n", "first_published_date": "\n\n\n 10/24/2022, 10:41 PM\n\n\n"}, "title": "writing_a_filter_formula_in_magic_etl", "breadcrumbs": [{"text": "domo", "url": "/s/knowledge-base/"}, {"text": "transforming_data_in_domo", "url": "/s/topic/0TO5w000000ZamzGAC"}, {"text": "magic_etl", "url": "/s/topic/0TO5w000000ZanvGAC"}]}