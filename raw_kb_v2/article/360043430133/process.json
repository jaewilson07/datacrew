{"file_path": "../../raw_kb_v2\\article\\360043430133\\index.html", "content": {"title": "\n\n\n Sample Beast Mode Calculations: Period-over-Period Transforms\n\n\n", "article_body": "\n\nIntro\n-------\n\nThis article lists a number of period-over-period calculations you can try out in Beast Mode. Many of these same calculations may also be possible using our\n\nPeriod-over-Period charting functionality\n\n.\n\n\n Creating a Period-over-Period Graph\n-------------------------------------\n\nYou can create a period-over-period graph in Domo using one Beast Mode calculation for the x-axis (date) and another Beast Mode calculation for the series. You can also create a Beast Mode calculation to limit the date ranges shown on the card.\n\n\n Start creating your own period-over-period Beast Mode calculations using the samples provided below. The following examples show you how to create a year-over-year graph as a demonstration.\n\n\n**Step 1: Create the x-axis (date) calculation (REQUIRED)**\n\n\n In this step you\u00a0project the dates from previous periods, such as years, onto the current period. In this way, data from different periods will appear on the same range on the x-axis.\u00a0This Beast Mode calculation replaces the year in a date value with the current year.\n\n\n`STR_TO_DATE(CONCAT(YEAR(CURRENT_DATE()), '-', DATE_FORMAT(`Date_Field`, '%m-%d') ), '%Y-%m-%d')`\n\n\n**Step 2: Create the series (year) calculation (REQUIRED)**\n\n\n Next you create a series that represents each period\u2019s data.\u00a0This Beast Mode calculation lets you create a series that represents the data for each year.\n\n\n`YEAR(`Date_Field`)`\n\n\n**Step 3: Create calculations for filtering (OPTIONAL)**\n\n\n If you want to see a time frame besides a full year (quarter-over-quarter, month-over-month, etc.), you can create a filter that allows you to get just the date range or period you\u2019re interested in.\n\n\n There are two different methods for creating Beast Mode calculations for filtering. The first method lets you create a filter for a specific date range. The second method lets you create a filter for a specified number of previous days, months, etc.\n\n\n*Specific Date Range*\n\n\n Use this Beast Mode calculation to create a filter for a specific date range.\n\n\n`CASE`\n\n\n`WHEN CONCAT(YEAR(CURRENT_DATE()), '-', DATE_FORMAT(`Date_Field\u00a0`, '%m-%d') ) >= '2015-07-01' AND CONCAT(YEAR(CURRENT_DATE()), '-', DATE_FORMAT(`Date_Field\u00a0`, '%m-%d') ) <= '2015-11-30' THEN 'TRUE'`\n\n\n`ELSE 'FALSE'`\n\n\n`END`\n\n\n*Last \u2018X\u2019 Days, Months, etc.*\n\n\n Use this Beast Mode calculation to create a filter for a specified number of periods back. Replace \u201c3 MONTH\u201d with whatever interval you\u2019re interested in, e.g. \u201c1 DAY,\u201d\u00a0\u201c4 WEEK,\u201d etc. \u00a0Just use the number and the singular version of the unit.\n\n\n`CASE`\n\n\n`WHEN STR_TO_DATE(CONCAT(YEAR(CURRENT_DATE()), '-', DATE_FORMAT(`Date_Field\u00a0`, '%m-%d') ), '%Y-%m-%d') >= DATE_SUB(CURRENT_DATE(), INTERVAL 3 MONTH) \u00a0THEN 'TRUE'`\n\n\n`ELSE 'FALSE'`\n\n\n`END`\n\n\n You can use variations of the above filters to limit the range in whatever way makes the most sense to you and your audience.\n\n\n Calculating Week-over-Week Change\n-----------------------------------\n\nUse the following code to create a calculation that shows week-over-week change. The following example includes 4 weeks prior (aligned on days), and 52 weeks prior (aligned on days). Change the values to the time periods you want.\n\n\n X Axis is Date - has to be \"Common Date\":\n\n\n`case\n\n\n when DateDiff(AddDate(Current_Date(), -1), `MyDateColumn`) < 28 and DateDiff(Current_Date(), `MyDateColumn`) > 0 then Date_Format(`MyDateColumn`, '%b %e')`\n\n\n`when\u00a0DateDiff(AddDate(Current_Date(), -1), `MyDateColumn`) < (28 + 28) and DateDiff(Current_Date(), `MyDateColumn`) > 28 then Date_Format(AddDate(`MyDateColumn`,28), '%b %e')`\n\n\n`when\u00a0DateDiff(AddDate(Current_Date(), -1), `MyDateColumn`) < 28 + (52 * 7) and DateDiff(Current_Date(), `MyDateColumn`) > (52 * 7) then Date_Format(AddDate(`MyDateColumn`,52 * 7), '%b %e')`\n\n\n`end`\n\n\n Filter to \"Last 28 Days\":\n\n\n`case\n\n\n when DateDiff(AddDate(Current_Date(), -1), `MyDateColumn`) < 28 and DateDiff(Current_Date(), `MyDateColumn`) > 0 then 'Yes'`\n\n\n`when DateDiff(AddDate(Current_Date(), -1), `MyDateColumn`) < (28 + 28) and DateDiff(Current_Date(), `MyDateColumn`) > 28 then 'Yes'`\n\n\n`when DateDiff(AddDate(Current_Date(), -1), `MyDateColumn`) < 28 + (52 * 7) and DateDiff(Current_Date(), `MyDateColumn`) > (52 * 7) then 'Yes'\n\n\n else 'No'\n\n\n end`\n\n\n Pick your metric (in this example, \"Visits\"), then create a column called \"Series\":\n\n\n`case\n\n\n when DateDiff(AddDate(Current_Date(), -1), `MyDateColumn`) < 28 and DateDiff(Current_Date(), `MyDateColumn`) > 0 then 'Last 28 Days'`\n\n\n`when DateDiff(AddDate(Current_Date(), -1), `MyDateColumn`) < (28 + 28) and DateDiff(Current_Date(), `MyDateColumn`) > 28 then '4 Weeks Prior'`\n\n\n`when\u00a0when DateDiff(AddDate(Current_Date(), -1), `MyDateColumn`) < 28 + (52 * 7) and DateDiff(Current_Date(), `MyDateColumn`) > (52 * 7) then '52 Weeks Prior'\n\n\n end`\n\n\n Calculating Percent Change from the Previous Year to the Current Year\n-----------------------------------------------------------------------\n\nSay you have a card that\u00a0shows the last 24 months, grouped by month. You have the year set as the series. In the summary number you\u00a0want to show the percent change from January through the current month of the previous year compared to January through the current month of the current year. To achieve this, you can create the following Beast Mode calculation:\n\n\n`(SUM(CASE WHEN YEAR('Date') = YEAR('NOW') THEN 'Total Sales' ELSE 0 END)-SUM(CASE WHEN YEAR('Date')= YEAR(DATE_SUB('NOW', INTERVAL 1 YEAR))AND month('Date') <= month('NOW') THEN 'Total Sales' ELSE 0 END))/`\n\n\n`SUM(CASE WHEN YEAR('Date')= YEAR(DATE_SUB('NOW', INTERVAL 1 YEAR)) AND month('Date') <= month('NOW') THEN 'Total Sales' ELSE 0 END)`\n\n\n This calculation would be useful as a summary number on a card or as the value on a Single Value gauge card. If you\u2019d like to chart the percent change over time, follow the instructions for advanced period-over-period calculations found in the\u00a0previous section,\u00a0then create a Beast Mode calculation to find the percent change from the fields created for the previous year\u2019s value and the current year\u2019s value following this formula:\n\n\n`(This Year\u2019s Value \u2013 Last Year\u2019s Value)\u00a0 / Last Year\u2019s Value`\n\n\n Calculating Variance\n----------------------\n\n\n###\n Variance CY-PY\n\nUse the following code to create a calculation for the variance Current Year - Past Year:\n\n\n`(\n\n\n SUM(CASE WHEN YEAR(`MyDateColumn`) = YEAR(CURRENT_DATE()) THEN `Amount` ELSE 0 END)\n\n\n - SUM(CASE WHEN YEAR(`MyDateColumn`) = YEAR(CURRENT_DATE()) - 1 THEN `Amount` ELSE 0 END)\n\n\n )`\n\n##\n Variance % ((CY - PY)/PY)\n\nUse the following code to create a calculation for the variance % ((Current Year - Past Year) / Past Year):\n\n\n`(\n\n\n (SUM(CASE WHEN YEAR(`MyDateColumn`) = YEAR(CURRENT_DATE()) THEN `Amount` ELSE 0 END)\n\n\n - SUM(CASE WHEN YEAR(`MyDateColumn`) = YEAR(CURRENT_DATE()) - 1 THEN `Amount` ELSE 0 END)\n\n\n )\n\n\n / NULLIF(SUM(CASE WHEN YEAR(`MyDateColumn`) = YEAR(CURRENT_DATE()) - 1 THEN `Amount` ELSE 0 END), 0)\n\n\n )`\n\n##\n Year-to-Date Variance\n\nLet's say you have a DataSet with your employee count by store by month. How could you compare the current month's employee count to the year-end count?\n\n\n Assuming your card is filtered to the current year, you could create the following Beast Mode calculations:\n\n\n Employee Count This Month:\n\n\n`COUNT(DISTINCT CASE WHEN YEAR(DateColumn) = YEAR(CURRENT_DATE()) AND MONTH(DateColumn) = MONTH(CURRENT_DATE()) THEN `Employee ID` END)`\n\n\n Employee Count This Year:\n\n\n`COUNT(DISTINCT'Employee ID')`\n\n\n Employee Count This Year -\u00a0 Employee Count This Month (YTD Variance):\n\n\n`COUNT(DISTINCT `Employee Id` - COUNT(DISTINCT CASE WHEN YEAR(DateColumn) = YEAR(CURRENT_DATE()) AND MONTH(DateColumn) = MONTH(CURRENT_DATE()) THEN `Employee ID` END)`\n\n\n If you need this data to be trended over time, this solution will require doing some DataFlow work to summarize things at a monthly level with a reference to YTD for each month.\n\n\n Calculating Year-over-Year (YOY) with Ratios\n----------------------------------------------\n\n\n All calculations for ratios must be done in a DataFlow if using this type of comparison.\n\n\n###\n YOY: Multi-Period Comparison\n\nTo create multi-period year-over-year calculations, refer to the following table:\n\n\n Period\n  |\n Description\n  |\n Calculation\n  |\n| --- | --- | --- |\n|\n By Year\n  |\n Create a year Beast Mode and plot as category (x-axis on most charts).\n  |\n year(`datefield`)\n  |\n|\n By Quarter\n  |\n Create a Quarter Beast Mode and plot as category\u00a0(x-axis on most charts),\u00a0and if you\u2019re spanning multiple years, use\n\nyear(\n\n`datefield`\n\n)\n\nas the series.\n  |\n Quarter(`datefield`)\n  |\n|\n By Month\n  |\n Create a Month Beast Mode and plot as category\u00a0(x-axis on most charts),\u00a0and if you\u2019re spanning multiple years, use\n\n\n year(`datefield`)\n\n\n as the series.\n  |\n Month(`datefield`)\n  |\n|\n By Week\n  |\n Create a Week Beast Mode and plot as category\u00a0(x-axis on most charts),\u00a0and if you\u2019re spanning multiple years, use\n\n\n year(`datefield`)\n\n\n as the series.\n  |\n WeekofYear(`datefield`)\n  |\n|\n By Day\n  |\n Create a Day Beast Mode and plot as category\u00a0(x-axis on most charts),\u00a0and if you\u2019re spanning multiple years, use\n\n\n year(`datefield`)\n\n\n as the series.\n  |\n DayofYear(`datefield`)\n  |\n\n\n###\n YOY: 2-Period Comparison\n\n\n \u2018This Year\u2019\n\nand\n\n\u2018Last Year\u2019\n\ncan be swapped out for other text or amount fields. When running ratios, amount fields are needed.\n\n\n The advantage of using the \u201cSame Series\" vs. the \u201cMultiple Series\" is that you can consolidate the code using the \u201cSame Series\u201d. However, if you\u2019re swapping out \u2018This Year\u2019/\u2018Last Year\u2019 for amount columns, these need to be separated.\n\n###\n YOY: Full-Year Comparison\n\nTo create full-year\u00a0year-over-year calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series - Current Year\n  |\n Case when Year(`Datefield`) = Year(curdate()) then 'This Year' end\n  |\n|\n Multiple Series - Previous Year\n  |\n Case when Year(`Datefield`) =\u00a0Year(curdate())-1\u00a0then 'Last Year' end\n  |\n|\n Multiple Series - Same Series\n  |\n Case year(`Datefield`) when year(curdate()) then 'This Year' when\u00a0year(curdate())-1 then 'Last Year\u2019\u00a0End\n  |\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(Case when Year(`Datefield`) = Year(curdate()) then\u00a0`Amountfield`\u00a0end /\u00a0Case when Year(`Datefield`) =\u00a0Year(curdate())-1\u00a0then\u00a0`Amountfield`\u00a0end) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n####\n YOY: Year-to-Date (YTD) Comparison\n\nTo create year-to-date\u00a0year-over-year calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series - Current Year\n  |\n CASE \u00a0WHEN year(`Datefield`)=year(curdate()) \u00a0THEN\u00a0'This Year'\u00a0END\n  |\n|\n Multiple Series - Previous Year\n  |\n CASE \u00a0WHEN ((year(`Datefield`)=(year(curdate()) - 1)) AND (dayofyear(curdate()) >= dayofyear(`Datefield`))) THEN\u00a0'Last Year'\u00a0END\n  |\n|\n Multiple Series - Same Series\n  |\n CASE WHEN year(`Datefield`) = year(curdate()) AND curdate() >= `Datefield` THEN 'This Year\u2019 when ((year(`Datefield`)=(year(curdate()) - 1)) AND (dayofyear(curdate()) >= dayofyear(`Datefield`))) THEN 'Last Year' END\n  |\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(CASE \u00a0WHEN year(`Datefield`)=year(curdate()) \u00a0THEN\u00a0`Amountfield`\u00a0END /\u00a0CASE \u00a0WHEN ((year(`Datefield`)=(year(curdate()) - 1)) AND (dayofyear(curdate()) >= dayofyear(`Datefield`))) THEN\u00a0`Amountfield`\u00a0END) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n####\n YOY: Quarter\u00a0Comparison\n\nTo create quarterly\u00a0year-over-year calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series - Current Year\n  |\n Case when (quarter(`Datefield`) = quarter(curdate()) and year(`Datefield`) = year(curdate())) then\u00a0'This Year'\u00a0end\n  |\n|\n Multiple Series - Previous Year\n  |\n Case when (quarter(`Datefield`)\u00a0= quarter(curdate()) and year(`Datefield`) =\u00a0year(curdate())-1) then\u00a0'Last Year' end\n  |\n|\n Multiple Series - Same Series\n  |\n Case when (Quarter(`Datefield`) = Quarter(curdate()) and year(`Datefield`) = year(curdate())) then 'This Year' when (Quarter(`Datefield`)\u00a0= Quarter(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year))) then\u00a0'Last Year'\u00a0End\n  |\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(Case when (quarter(`Datefield`) = quarter(curdate()) and year(`Datefield`) = year(curdate())) then\u00a0`Amountfield`\u00a0end / Case when (quarter(`Datefield`)\u00a0= quarter(curdate()) and year(`Datefield`) =\u00a0year(curdate())-1) then\u00a0`Amountfield`\u00a0end) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n####\n YOY: Quarter-to-Date (QTD) Comparison\n\nTo create quarter-to-date\u00a0year-over-year calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series - Current Year\n  |\n Case when (quarter(`Datefield`) = quarter(curdate()) and year(`Datefield`) = year(curdate()) and\u00a0dayofyear(`Datefield`) <=\u00a0dayofyear(curdate())) then\u00a0'This Year'\u00a0end\n  |\n|\n Multiple Series - Previous Year\n  |\n Case when (quarter(`Datefield`)\u00a0= quarter(curdate()) and year(`Datefield`) =\u00a0year(curdate())-1\u00a0and\u00a0dayofyear(`Datefield`) <=\u00a0dayofyear(curdate())) then\u00a0'Last Year' end\n  |\n|\n Multiple Series - Same Series\n  |\n Case when (Quarter(`Datefield`) = Quarter(curdate()) and year(`Datefield`) = year(curdate())) then 'This Year' when (Quarter(`Datefield`)\u00a0= Quarter(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year))) then\u00a0'Last Year'\u00a0End\n  |\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(Case when (quarter(`Datefield`) = quarter(curdate()) and year(`Datefield`) = year(curdate()) and\u00a0dayofyear(`Datefield`) <=\u00a0dayofyear(curdate())) then\u00a0`Amountfield`\u00a0end / Case when (quarter(`Datefield`)\u00a0= quarter(curdate()) and year(`Datefield`) =\u00a0year(curdate())-1\u00a0and\u00a0dayofyear(`Datefield`) <=\u00a0dayofyear(curdate())) then`Amountfield`\u00a0end) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n####\n YOY: Month Comparison\n\nTo create monthly\u00a0year-over-year calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series - Current Year\n  |\n Case when (month(`Datefield`) = month(curdate()) and year(`Datefield`) = year(curdate())) then\u00a0'This Year'\u00a0end\n  |\n|\n Multiple Series - Previous Year\n  |\n Case when (month(`Datefield`)\u00a0= month(curdate()) and year(`Datefield`) =\u00a0year(curdate())-1) then\u00a0'Last Year' end\n  |\n|\n Multiple Series - Same Series\n  |\n Case when (month(`Datefield`) = month(curdate()) and year(`Datefield`) = year(curdate())) then 'This Year' when (month(`Datefield`) = month(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year))) then 'Last Year'\u00a0End\n  |\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(Case when (month(`Datefield`) = month(curdate()) and year(`Datefield`) = year(curdate())) then\u00a0`Amountfield`\u00a0end / Case when (month(`Datefield`)\u00a0= month(curdate()) and year(`Datefield`) =\u00a0year(curdate())-1) then\u00a0`Amountfield`\u00a0end) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n####\n YOY: Month-to-Date (MTD) Comparison\n\nTo create month-to-date\u00a0year-over-year calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series - Current Year\n  |\n Case when (month(`Datefield`) = month(curdate()) and year(`Datefield`) = year(curdate())\u00a0and DAYOFMONTH(`Datefield`) <= DAYOFMONTH(curdate())) then\u00a0'This Year'\u00a0\u00a0end\n  |\n|\n Multiple Series - Previous Year\n  |\n Case\u00a0when (month(`Datefield`) = month(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year)) and DAYOFMONTH(`Datefield`) <= DAYOFMONTH(curdate())) then \u00a0'Last Year'\u00a0\u00a0end\n  |\n|\n Multiple Series - Same Series\n  |\n Case when (month(`Datefield`) = month(curdate()) and year(`Datefield`) = year(curdate())\u00a0and DAYOFMONTH(`Datefield`) <= DAYOFMONTH(curdate())) then 'This Year' when (month(`Datefield`) = month(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year)) and DAYOFMONTH(`Datefield`) <= DAYOFMONTH(curdate())) then Last Year'\u00a0End\n  |\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(Case when (month(`Datefield`) = month(curdate()) and year(`Datefield`) = year(curdate())\u00a0and DAYOFMONTH(`Datefield`) <= DAYOFMONTH(curdate())) then\u00a0`Amountfield`\u00a0end / Case\u00a0when (month(`Datefield`) = month(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year)) and DAYOFMONTH(`Datefield`) <= DAYOFMONTH(curdate())) then\u00a0`Amountfield`\u00a0 end) \u00a0-1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n####\n YOY: Week Comparison\n\nTo create month-to-date\u00a0year-over-year calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series - Current Year\n  |\n Case when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(curdate())) then 'This Year\u2019 end\n  |\n|\n Multiple Series - Previous Year\n  |\n Case when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year))) then 'Last Year' End\n  |\n|\n Multiple Series - Same Series\n  |\n Case when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(curdate())) then 'This Year' when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year))) then 'Last Year\u2019 End\n  |\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n((Case when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(curdate())) then\u00a0`Amountfield`\u00a0end / Case when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year))) then\u00a0`Amountfield`\u00a0End) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n####\n YOY: Week-to-Date (WTD) Comparison\n\nTo create week-to-date\u00a0year-over-year calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series - Current Year\n  |\n Case when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(curdate())\u00a0and DAYOFWEEK(`Datefield`) <= DAYOFWEEK(curdate())) then 'This Year'\u00a0end\n  |\n|\n Multiple Series - Previous Year\n  |\n Case when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year)) and DAYOFWEEK(`Datefield`) <= DAYOFWEEK(curdate())) then 'Last Year' End\n  |\n|\n Multiple Series - Same Series\n  |\n Case when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(curdate())\u00a0and DAYOFWEEK(`Datefield`) <= DAYOFWEEK(curdate())) then 'This Year' when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year))and DAYOFWEEK(`Datefield`) <= DAYOFWEEK(curdate())) then 'Last Year\u2019 End\n  |\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(Case when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(curdate())\u00a0and DAYOFWEEK(`Datefield`) <= DAYOFWEEK(curdate())) then\u00a0`Amountfield`\u00a0end / Case when (WEEKOFYEAR(`Datefield`) = WEEKOFYEAR(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year)) and DAYOFWEEK(`Datefield`) <= DAYOFWEEK(curdate())) then\u00a0`Amountfield`\u00a0End) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n####\n\nYOY: Day Comparison\n\nTo create week-to-date\u00a0year-over-year calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series - Current Year\n  |\n Case when (DAYOFYEAR(`Datefield`) = DAYOFYEAR(curdate()) and year(`Datefield`) = year(curdate())) then 'This Year'\u00a0end\n  |\n|\n Multiple Series - Previous Year\n  |\n Case when (DAYOFYEAR(`Datefield`) = DAYOFYEAR(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year))) then 'Last Year' End\n  |\n|\n Multiple Series - Same Series\n  |\n Case when (DAYOFYEAR(`Datefield`) = DAYOFYEAR(curdate()) and year(`Datefield`) = year(curdate())) then 'This Year' when (DAYOFYEAR(`Datefield`) = DAYOFYEAR(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year))) then 'Last Year' End\n  |\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(Case when (DAYOFYEAR(`Datefield`) = DAYOFYEAR(curdate()) and year(`Datefield`) = year(curdate())) then\u00a0`Amountfield`\u00a0end / Case when (DAYOFYEAR(`Datefield`) = DAYOFYEAR(curdate()) and year(`Datefield`) = year(date\\_sub(curdate(), interval 1 year))) then\u00a0`Amountfield`\u00a0End) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\nPOP Calculations\u00a0with Ratio Calculations\u00a0(Current Period vs. Last)\n--------------------------------------------------------------------\n\n\n###\n POP: Quarter-over-Quarter (QOQ) Comparison\n\nTo create\u00a0quarter-over-quarter comparison\u00a0calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series - Current Period\n  |\n CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (quarter(`Datefield`)=quarter(CURDATE()))) THEN `Amountfield` END\n  |\n|\n Multiple Series - Previous Period\n  |\n CASE \u00a0WHEN (quarter(curdate())=1) THEN (CASE \u00a0WHEN ((year(`Datefield`)=(year(curdate()) - 1)) AND (quarter(`Datefield`)=4)) THEN `Amountfield` END ) ELSE (CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (quarter(`Datefield`)=(quarter(CURDATE()) -1))) THEN `Amountfield` END ) END\n  |\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (quarter(`Datefield`)=quarter(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\u00a0/ CASE \u00a0WHEN (quarter(curdate())=1) THEN (CASE \u00a0WHEN ((year(`Datefield`)=(year(curdate()) - 1)) AND (quarter(`Datefield`)=4)) THEN\u00a0`Amountfield`\u00a0END ) ELSE (CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (quarter(`Datefield`)=(quarter(CURDATE()) -1))) THEN\u00a0`Amountfield`\u00a0END ) END) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n###\n POP: QTD Quarter-over-Quarter\u00a0Comparison\n\nTo create quarter-to-date quarter-over-quarter comparison\u00a0calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series - Current Period\n  |\n CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (quarter(`Datefield`)=quarter(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\n  |\n|\n Multiple Series - Previous Period\n  |\n\nMAX(CASE WHEN YEAR(curdate()) / 4 = ROUND((YEAR(curdate()) / 4),0) THEN\n\n\n CASE WHEN QUARTER(curdate())=1 THEN (DAYOFYEAR(curdate()) - 1)\n\n\n WHEN (QUARTER(curdate())=2) THEN (DAYOFYEAR(curdate()) - 91)\n\n\n WHEN (QUARTER(curdate())=3) THEN (DAYOFYEAR(curdate()) - 182)\n\n\n WHEN (QUARTER(curdate())=4) THEN (DAYOFYEAR(curdate()) - 273)\n\n\n ELSE 0 END\n\n\n ELSE\u00a0CASE\n\n\n WHEN QUARTER(curdate())=1 THEN DAYOFYEAR(curdate()) - 1\n\n\n WHEN QUARTER(curdate())=2 THEN DAYOFYEAR(curdate()) - 90\n\n\n WHEN QUARTER(curdate())=3 THEN DAYOFYEAR(curdate()) - 181\n\n\n WHEN QUARTER(curdate())=4 THEN DAYOFYEAR(curdate()) - 272\n\n\n ELSE 0 END\n\n\n END)\u00a0\\*\u00a0MAX(CASE WHEN YEAR(curdate()) / 4=ROUND(YEAR(curdate()) / 4,0) THEN\n\n\n CASE WHEN (QUARTER(curdate())=1) THEN 91\n\n\n WHEN (QUARTER(curdate())=2) THEN 91\n\n\n WHEN (QUARTER(curdate())=3) THEN 92\n\n\n WHEN (QUARTER(curdate())=4) THEN 92\n\n\n ELSE 0 \u00a0END\n\n\n ELSE CASE\n\n\n WHEN (QUARTER(curdate())=1) THEN 90\n\n\n WHEN (QUARTER(curdate())=2) THEN 91\n\n\n WHEN (QUARTER(curdate())=3) THEN 92\n\n\n WHEN (QUARTER(curdate())=4) THEN 92\n\n\n ELSE 0 END\n\n\n END)\u00a0-\u00a0MAX(CASE WHEN YEAR(curdate()) / 4=ROUND(YEAR(curdate()) / 4,0) THEN\n\n\n CASE WHEN QUARTER(curdate())=1 THEN DAYOFYEAR(curdate()) - 1\n\n\n WHEN QUARTER(curdate())=2 THEN DAYOFYEAR(curdate()) - 91\n\n\n WHEN QUARTER(curdate())=3 THEN DAYOFYEAR(curdate()) - 182\n\n\n WHEN QUARTER(curdate())=4 THEN DAYOFYEAR(curdate()) - 273\n\n\n ELSE 0 END\n\n\n ELSE CASE\n\n\n WHEN QUARTER(curdate())=1 THEN DAYOFYEAR(curdate()) - 1\n\n\n WHEN QUARTER(curdate())=2 THEN DAYOFYEAR(curdate()) - 90\n\n\n WHEN QUARTER(curdate())=3 THEN DAYOFYEAR(curdate()) - 181\n\n\n WHEN QUARTER(curdate())=4 THEN DAYOFYEAR(curdate()) - 272\n\n\n ELSE 0 END\n\n\n END)\u00a0+\u00a0SUM(CASE WHEN QUARTER(curdate())=QUARTER(`Datefield`) AND YEAR(`Datefield`)=YEAR(curdate()) THEN\u00a0`Amountfield`\u00a0ELSE 0 END)\u00a0-\n\n\n SUM((CASE WHEN ((QUARTER(curdate())=QUARTER(`Datefield`)) AND (YEAR(`Datefield`)=YEAR(DATE\\_SUB(curdate(),INTERVAL 1 QUARTER)))) THEN\u00a0`Amountfield`\u00a0ELSE 0 END ))) / SUM((CASE \u00a0WHEN QUARTER(DATE\\_SUB(curdate(),INTERVAL 1 QUARTER))=QUARTER(`Datefield`) AND YEAR(`Datefield`)=YEAR(DATE\\_SUB(curdate(),INTERVAL 1 QUARTER)) THEN\u00a0`Amountfield`\u00a0ELSE 0 END ))\n\n|\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\nTake the formula above and insert the previous two sections to get the result.\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n###\n POP: Month-over-Month (MOM) Comparison\n\nTo create month-over-month\u00a0comparison\u00a0calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series\n  |\n\nCASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (month(`Datefield`)=month(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\n\n\n CASE \u00a0WHEN (month(curdate())=1) THEN (CASE WHEN ((year(`Datefield`)=(year(curdate()) - 1)) AND (month(`Datefield`)=12)) THEN `Amountfield` END ) ELSE (CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (month(`Datefield`)=(month(CURDATE()) -1))) THEN\u00a0`Amountfield`\u00a0END ) END\n\n|\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (month(`Datefield`)=month(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\u00a0/ CASE \u00a0WHEN (month(curdate())=1) THEN (CASE WHEN ((year(`Datefield`)=(year(curdate()) - 1)) AND (month(`Datefield`)=12)) THEN\u00a0`Amountfield`\u00a0END ) ELSE (CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (month(`Datefield`)=(month(CURDATE()) -1))) THEN\u00a0`Amountfield`\u00a0END ) END) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n###\n\nPOP: Month-to-Date MOM Comparison\n\nTo create month-to-date month-over-month\u00a0comparison\u00a0calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series\n  |\n\nCASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (month(`Datefield`)=month(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\n\n\n CASE WHEN month(curdate()) = 1 THEN\u00a0CASE WHEN year(`Datefield`) = year(curdate()) - 1 AND month(`Datefield`) = 12 AND DAYOFMONTH(`Datefield`) <= DAYOFMONTH(curdate()) THEN\u00a0`Amountfield`\u00a0END \u00a0ELSE CASE \u00a0WHEN year(`Datefield`) = year(curdate()) AND month(`Datefield`) = month(curdate())-1 AND DAYOFMONTH(`Datefield`) <= DAYOFMONTH(curdate()) THEN\u00a0`Amountfield`\u00a0END END\n\n|\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (month(`Datefield`)=month(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\u00a0/ CASE WHEN month(curdate()) = 1 THEN\u00a0CASE WHEN year(`Datefield`) = year(curdate()) - 1 AND month(`Datefield`) = 12 AND DAYOFMONTH(`Datefield`) <= DAYOFMONTH(curdate()) THEN\u00a0`Amountfield`\u00a0END \u00a0ELSE CASE \u00a0WHEN year(`Datefield`) = year(curdate()) AND month(`Datefield`) = month(curdate())-1 AND DAYOFMONTH(`Datefield`) <= DAYOFMONTH(curdate()) THEN\u00a0`Amountfield`\u00a0END END) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n###\n POP: Week-over-Week (WOW) Comparison\n\nTo create week-over-week\u00a0comparison\u00a0calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series\n  |\n\nCASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (weekofyear(`Datefield`)=weekofyear(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\n\n\n CASE \u00a0WHEN (weekofyear(curdate())=1) THEN (CASE WHEN ((year(`Datefield`)=(year(curdate()) - 1)) AND (weekofyear(`Datefield`)=52)) THEN\u00a0`Amountfield`\u00a0END ) ELSE (CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (weekofyear(`Datefield`)=(weekofyear(CURDATE()) -1))) THEN\u00a0`Amountfield`\u00a0END ) END\n\n|\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (weekofyear(`Datefield`)=weekofyear(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\u00a0/ CASE \u00a0WHEN (weekofyear(curdate())=1) THEN (CASE WHEN ((year(`Datefield`)=(year(curdate()) - 1)) AND (weekofyear(`Datefield`)=52)) THEN\u00a0`Amountfield`\u00a0END ) ELSE (CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (weekofyear(`Datefield`)=(weekofyear(CURDATE()) -1))) THEN\u00a0`Amountfield`\u00a0END ) END) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n###\n\nPOP: Week-to-Date\u00a0WOW Comparison\n\nTo create week-to-date week-over-week\u00a0comparison\u00a0calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series\n  |\n\nCASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (weekofyear(`Datefield`)=weekofyear(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\n\n\n CASE WHEN weekofyear(curdate()) = 1 THEN CASE WHEN year(`Datefield`) = year(curdate()) - 1 AND weekofyear(`Datefield`) = 52 AND DAYOFWEEK(`Datefield`) <= DAYOFWEEK(curdate()) THEN\u00a0`Amountfield`\u00a0END ELSE CASE WHEN year(`Datefield`) = year(curdate()) AND weekofyear(`Datefield`)\u00a0= weekofyear(CURDATE()) -1 AND DAYOFWEEK(`Datefield`) <= DAYOFWEEK(curdate()) THEN\u00a0`Amountfield`\u00a0END END\n\n|\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (weekofyear(`Datefield`)=weekofyear(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\u00a0/ CASE WHEN weekofyear(curdate()) = 1 THEN CASE WHEN year(`Datefield`) = year(curdate()) - 1 AND weekofyear(`Datefield`) = 52 AND DAYOFWEEK(`Datefield`) <= DAYOFWEEK(curdate()) THEN\u00a0`Amountfield`\u00a0END ELSE CASE WHEN year(`Datefield`) = year(curdate()) AND weekofyear(`Datefield`)\u00a0= weekofyear(CURDATE()) -1 AND DAYOFWEEK(`Datefield`) <= DAYOFWEEK(curdate()) THEN\u00a0`Amountfield`\u00a0END END) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n###\n POP: Day-over-Day (DOD) Comparison\n\nTo create day-over-day\u00a0comparison\u00a0calculations, refer to the following table:\n\n\n Type\n  |\n Calculation\n  |\n| --- | --- |\n|\n Multiple Series\n  |\n\nCASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (dayofyear(`Datefield`)=dayofyear(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\n\n\n CASE \u00a0WHEN (dayofyear(curdate())=1) THEN (CASE WHEN ((year(`Datefield`)=(year(curdate()) - 1)) AND (dayofyear(`Datefield`)=365)) THEN\u00a0`Amountfield`\u00a0END ) ELSE (CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (dayofyear(`Datefield`)=(dayofyear(CURDATE()) -1))) THEN\u00a0`Amountfield`\u00a0END ) END\n\n|\n|\n Ratio: % change between the two using the formula (C/P) - 1\n  |\n\n(CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (dayofyear(`Datefield`)=dayofyear(CURDATE()))) THEN\u00a0`Amountfield`\u00a0END\u00a0/\u00a0CASE \u00a0WHEN (dayofyear(curdate())=1) THEN (CASE WHEN ((year(`Datefield`)=(year(curdate()) - 1)) AND (dayofyear(`Datefield`)=365)) THEN\u00a0`Amountfield`\u00a0END ) ELSE (CASE \u00a0WHEN ((year(`Datefield`)=year(curdate())) AND (dayofyear(`Datefield`)=(dayofyear(CURDATE()) -1))) THEN\u00a0`Amountfield`\u00a0END ) END) -1\n\n\n**Note:**\n Can also be done using (C-P)/P but this takes more code.\n\n|\n\n\n", "preview_article": "\n\nClick here to preview\n\n", "url_name": "\n\n\n 360043430133\n\n\n", "summary____________________________________________briefly_describe_the_article_the_summary_is_used_in_search_results_to_help_users_find_relevant_articles_you_can_improve_the_accuracy_of_search_results_by_including_phrases_that_your_customers_use_to_describe_this_issue_or_topic": "\n\n", "article_number": "\n\n\n 000004075\n\n\n", "archived_date": "\n\n\n", "language": "\n\n\n English\n\n\n", "primary_version": "\n\nSample Beast Mode Calculations: Period-over-Period Transforms\n\n", "article_total_view_count": "\n\n\n 15,623\n\n\n", "": "\n\n", "article_created_date": "\n\n\n 10/24/2022, 9:20 PM\n\n\n", "first_published_date": "\n\n\n 10/24/2022, 10:40 PM\n\n\n"}, "title": "sample_beast_mode_calculations_periodoverperiod_transforms", "breadcrumbs": [{"text": "domo", "url": "/s/knowledge-base/"}, {"text": "creating_content_in_domo", "url": "/s/topic/0TO5w000000ZamoGAC"}, {"text": "beast_mode", "url": "/s/topic/0TO5w000000ZanAGAS"}]}