{"file_path": "../../raw_kb_v2\\article\\360042926154\\index.html", "content": {"Title": "Best Practices for Managing DataSets", "Article Body": "General Best Practices\n                       \n\n\n\n\n                           Make sure that every DataSet you create or import has a name and a description with specific details about what that DataSet contains.\n                          \n\n\n\n\n\n                           Refrain from including the name of the connector you\u2019re using in the DataSet title name to avoid redundancy.\n                          \n\n\n\n\n\n                           Don\u2019t add date ranges in the DataSet name (for example, \u201cGoogle Analytics 2016\u201d). Most DataSets are set up on automated schedule, and the name may become out of date soon. This practice will also help you avoid having to rename the DataSet and all other DataSets with dates in their names.\n                          \n\n\n\n\n\n                           For DataSet descriptions, write a basic description of what data is being pulled, such as spends, impressions, etc. You can put the update frequency in the description, but it will often depend on whether or not that element is important to typical users.\n                          \n\n\n\n\n\n                           Always designate an owner of the DataSet. This person should be responsible for that data. If a person sets up a DataSet and then does not transfer it to the owner of the data who should responsible for updating it, then the person who created the dataset (not the presumed owner) would receive the alert if that dataset breaks instead of the presumed owner, who is tasked with fixing it.\n                          \n\n\n\n\n\n                           Add the data input and outsets for that DataFlow so future users can track down information relevant to the DataSet or DataFlow. In addition, include the frequency of the DataFlow and if it is automated or on a schedule.\n                          \n\n\n\n\n\n\n                              Suggested DataFlow DataSet Descriptions:\n                             \n\n\n\n\n\n\n                               Input DataSets:\n                              \n\n\n\n\n\n                               Output DataSets:\n                              \n\n\n\n\n\n                               Run Frequency:\n                              \n\n\n\n\n\n\n\n\n\n                           When creating DataFlows that contain a calculated field, you want to add a prefix or a suffix such as \u201dCALC\u201d so future users know there a calculated field in the DataFlow. When you troubleshoot the DataFlow later, it is much easier to determine if you are aware of the calculations.\n                          \n\n\n\n\n\n                           DataSets should be named using the following template:\n                           \n                            TYPE_ClientInfo_Source_ReportName\n                           \n                           (for example, RAW_Kablinko_Sizmek_Performance_Analytics)\n                          \n\n\n\n\n\n\n                            Recommended Naming Prefixes and What Each Means\n                           \n\n\n\n\n\n                            RAW_: Raw data file that is pulled directly from a source. Transformations will be done on this data with Magic ETL or MySQL.\n                           \n\n\n\n\n                             INT_: Intermediary DataSet for DataFlow.\n                            \n                            Usually the output of a dataflow that prepares the data to be merged with another source. A\n                            \n                             dd PROD DataSet to description.\n                            \n\n\n\n\n\n                             DEV_: Data is being audited. Change to PROD when audited.\n                            \n\n\n\n\n\n                             PROD_: Production. Used for final DataSets. These are DataSets you can build cards on.\n                            \n\n\n\n\n\n                             TEMP_: Used for test, development, and ad-hoc DataSets. These should be periodically audited to determine necessity.\n                            \n\n\n\n\n\n\n\n\n                            Recommended Naming Suffix\n                           \n\n\n\n\n\n\n                             CALC: Calculated fields that have been added through the ETL process.\n                            \n\n\n\n\n\n\n                          All DataSets must follow certain column naming conventions that ensure your column names are correctly interpreted. This applies to all DataSets (Connectors, imports, DataFlow output, etc.)\n                         \n\n\n\n\n                           Column Naming Conventions\n                          \n\n\n\n\n                            Column names cannot begin with a single quote, double quote, or a backtick.\n                           \n\n\n\n\n\n                            Column names cannot contain surrogate characters (special characters that use two code points to represent a single character.)\n                           \n\n\n\n                            Column names must be unique, regardless of case. In other words, columns that differ in name by case only are not allowed.\n                           \n\n\n\n                            All other column names are valid.\n                           \n\n\n\n\n\n\n                           Before you select the Share Calculation option when creating a Beast Mode, determine when it is effective to select this option. If the calculation is a common field many people will be using, it\u2019s a good idea to share the calculation. If it\u2019s a one time, ad hoc function, it is better to not share it, because it may end up causing problems for other users who don\u2019t understand how it is supposed to be used in context.\n                          \n\n\n\n\n                        Data Governance\n                       \n\n\n\n\n                           If your company wants to create an extensive governance model, you have the option of adding comments to a Beast Mode calculation for a DataSet. These comments, which are essentially metadata within the Beast Mode calculation itself, can identify the author of the Beast Mode calculation and create a date and description of the Beast Mode and what it does. This way other people can access this useful information when they are determining whether to use it in their cards or who they need to talk to if they have questions about it.\n                          \n\n\n\n\n\n\n                              Example Metadata for Beast Mode Identifying Author, Created Date, Brief Description\n                             \n\n\n\n\n\n\n\n\n\n                          /* Author:\n                         \n\n\n\n\n\n                          Created Date:\n                         \n\n\n\n\n\n                          Description:\n                         \n\n\n\n\n\n                          */\n                         \n\n\n\n\n\n\n\n                           If you are doing a test connection on a new DataSet, always set it to update manually instead of trying to set up an automatic feed. You don\u2019t want a test or a problem dataset uploaded regularly.\n                          \n\n\n\n\n\n                           Have the MajorDomo or another key stakeholder audit DataSets on a regular basis to make sure that there aren\u2019t redundant DataSets, DataSets that have zero cards, and DataSets with zero DataFlows connected to them.\n                          \n\n\n\n\n\n                           The MajorDomo can audit cards in the Data Center by sorting by number of cards. If you find a number of cards with zero DataSets connected to them, you can either delete each or reach out to the owner of the DataSets to determine why the cards are inside of Domo and, if necessary, ask that the owner delete the DataSet(s).\n                          \n\n\n\n\n\n                           When auditing unused DataFlows it is a bit trickier to distinguish, but if you see it hasn\u2019t run in 1-2 months, that\u2019s an indication that there is no schedule on it and you may be able to delete it out, or investigate with the owner what\u2019s going on with it.\n                          \n\n\n\n\n\n                           When setting up data governance, make individual assignments for each tools. For example, you could assign one person to audit Workbench, one to audit all of the social data, one to audit Magic ETL data, and so on. Having an owner for each data type ensures those resources are always being audited. This can help facilitate your DataSet requirements and decrease the number of issues that are brought to the Center of Excellence.\n                          \n\n\n\n\n\n                           Have a process in place for the user to\n                          \n\n\n\n\n\n                             Upload the data.\n                            \n\n\n\n\n\n                             Validate that the data is correct, either in Workbench or another tool.\n                            \n\n\n\n\n\n                             Validate the data again in Domo to make sure your numbers are projecting as expected.\n                            \n\n\n\n\n\n                             Go through every step of the process to ensure your data is correct and you can build cards from it.\n                            \n\n\n\n\n\n                             After you have validated the data, make sure that Analyzer understands the DataSet.\n                            \n\n\n\n\n\n                             After the card is built, have your data owner validate the card, as there may be a dimension that the person who built the card missed in regards to filtering.\n                            \n\n\n\n\n\n\n\n                         By having validation steps throughout the entire process, you make sure that the numbers are appearing as expected and aren\u2019t missing any details in a complex data structure or have calculations that don\u2019t make sense.\n                        \n\n\n\n\n\n                           Have those who audit data always check errors and check run failures. Make sure these persons have credentials and access to accounts if they are not the credential owner.\n                          \n\n\n\n\n\n                           It is good practice to audit the Data Center once a quarter and make sure all the important DataFlows and DataSets are running. Also, confirm that all credentials are working or re-authenticate any of the ones that are out of date.\n                          \n\n\n\n\n                        Other Best Practices Topics\n                       \n\n                        For more Domo best practices, visit the following topics:\n                       \n\n\n\n\n                           Projects and Tasks Best Practices\n                          \n\n\n\n\n\n                           Best Practices for Creating Visualization Cards\n                          \n\n\n\n\n\n                           Best Practices for Choosing Chart Types\n                          \n\n\n\n\n\n                           Top 10 Dashboard Design Best Practices\n                          \n\n\n\n\n\n                           Best Practices for Standardizing KPIs\n                          \n\n\n\n\n\n                           Best Practices for Designing KPIs", "Preview Article": "Click here to preview", "URL Name": "360042926154", "Summary\n                     \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                       Briefly describe the article. The summary is used in search results to help users find relevant articles. You can improve the accuracy of search results by including phrases that your customers use to describe this issue or topic.": "", "Article Number": "000004900", "Archived Date": "", "Language": "English", "Primary Version": "Best Practices for Managing DataSets", "Article Total View Count": "10,257", "": "", "Article Created Date": "10/24/2022, 10:34 PM", "First Published Date": "10/24/2022, 10:42 PM"}, "title": "\n              Best Practices for Managing DataSets\n             ", "breadcrumbs": [{"text": "\n\n               Domo\n              \n", "url": "/s/knowledge-base/"}, {"text": "\n\n               Working With DataSets In Domo\n              \n", "url": "/s/topic/0TO5w000000Zan2GAC"}, {"text": "\n\n               Data Center Overview\n              \n", "url": "/s/topic/0TO5w000000ZanRGAS"}]}